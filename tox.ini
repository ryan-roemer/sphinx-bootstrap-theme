# NOTE: adding / removing tests?  Please update demo/source/maintenance.rst!

[tox]
# By default, run tests and linting checks when invoking `tox`.
envlist = py, lint

[testenv]
passenv = PYTHONWARNINGS
deps =
    # NOTE: SPHINX_VERSION environment variable must have `==`, e.g.:
    #       SPHINX_VERSION="==1.8.5" tox
    #       On Unix, the double quotes are not necessary provided no spaces.
    sphinx{env:SPHINX_VERSION:}
changedir = demo
commands =
    # Not really a test, but if we can build the docs then it works with this
    # combination of python / sphinx.
    {envpython} --version
    sphinx-build --version
    sphinx-build -W -n -b html -d {envtmpdir}/doctrees source {envtmpdir}/html

# Build demo site in nitpicky / warnings=error mode.
[testenv:docs]
changedir = demo
commands =
    sphinx-build -W -n -b html -d {envtmpdir}/doctrees source {envtmpdir}/html

# Validate all links in the demo website.
[testenv:linkcheck]
changedir = demo
commands =
    sphinx-build -W -b linkcheck -d {envtmpdir}/doctrees source {envtmpdir}/linkcheck

# Open a development server.  See options here:
# https://github.com/GaretJax/sphinx-autobuild
#
# Example run on port other than 8000:
# tox -e server -- -p 8080
[testenv:server]
changedir = {toxinidir}
usedevelop = true
recreate = true
deps =
    {[testenv]deps}
    sphinx-autobuild
commands =
    sphinx-autobuild -a -E \
                     -b html \
                     -d {envtmpdir}/doctrees \
                     --watch {toxinidir}/sphinx_bootstrap_theme \
                     {posargs} \
                     {toxinidir}/demo/source \
                     {envtmpdir}/html

# Linting checks.
[testenv:lint]
changedir = {toxinidir}
skip_install = true
deps =
    flake8
commands =
    flake8 {posargs} setup.py sphinx_bootstrap_theme

# Package for uploading to PyPI.  Everything is put in dist/ folder.
[testenv:dist]
changedir = {toxinidir}
passenv =
    {[testenv]passenv}
skip_install = true
deps =
    readme_renderer
    twine
commands =
    {envpython} -c "import os.path as osp, sys; \
        dist_path = osp.join('{toxinidir}', 'dist'); \
        dist_exists = osp.exists(dist_path); \
        m = '[X] Delete the ' + dist_path + ' folder.\n' if dist_exists else ''; \
        sys.stderr.write(m); \
        sys.exit(int(dist_exists))"
    {envpython} setup.py sdist
    # TODO: this last one goes away once we ditch python 2 (via Sphinx 2.x+).
    {envpython} setup.py bdist_wheel --universal
    twine check dist/*

# Dummy env for helping with cleanup of build related artifacts.
[testenv:clean]
skip_install = true
deps =
commands =
    {envpython} -c "import os.path as osp; from shutil import rmtree; \
        root = '{toxinidir}'; \
        rmtree(osp.join(root, 'build'), ignore_errors=True); \
        rmtree(osp.join(root, 'dist'), ignore_errors=True); \
        rmtree(osp.join(root, 'sphinx_bootstrap_theme.egg-info'), ignore_errors=True); \
        rmtree(osp.join(root, 'sphinx_bootstrap_theme', '__pycache__'), ignore_errors=True)"
